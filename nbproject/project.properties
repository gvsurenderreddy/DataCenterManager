annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.desc=DataCenterManager is Performance Monitoring / Trend Analysis Java Desktop and Client - Server application that automatically inventories and statistically monitors UNIX servers. (without installing extra software on your servers, just by using SSH and plain old UNIX commands). Therefore implementing DCM does not require server changes and it runs on almost any computer platform!\nYour entire datacenter can be automatically inventoried by only supplying hostname, username & password for each server, either \u201cone by one\u201d or via an automated CSV host-list import file. 
application.homepage=https://sites.google.com/site/ronuitzaandam/
application.splash=
application.title=DCManager
application.vendor=Ron de Jong
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.project.expand-tabs=true
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.project.indent-shift-width=4
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.project.spaces-per-tab=4
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.project.tab-size=8
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.project.text-limit-width=80
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.project.text-line-wrap=none
auxiliary.org-netbeans-modules-editor-indent.CodeStyle.usedProfile=project
auxiliary.org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.classDeclBracePlacement=NEW_LINE
auxiliary.org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.expand-tabs=false
auxiliary.org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.methodDeclBracePlacement=NEW_LINE
auxiliary.org-netbeans-modules-editor-indent.text.x-java.CodeStyle.project.otherBracePlacement=NEW_LINE
auxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/DCManager.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.balloontip-1.2.1.jar=libs/balloontip-1.2.1.jar
file.reference.commons-logging-1.1.1.jar=libs/commons-logging-1.1.1.jar
file.reference.commons-logging-adapters-1.1.1.jar=libs/commons-logging-adapters-1.1.1.jar
file.reference.commons-logging-api-1.1.1.jar=libs/commons-logging-api-1.1.1.jar
file.reference.DateChooser.jar=libs/DateChooser.jar
file.reference.derby.jar=libs/derby.jar
file.reference.derbyclient.jar=libs/derbyclient.jar
file.reference.derbynet.jar=libs/derbynet.jar
file.reference.derbyrun.jar=libs/derbyrun.jar
file.reference.derbytools.jar=libs/derbytools.jar
file.reference.expectj-2.0.7.jar=libs/expectj-2.0.7.jar
file.reference.j2ssh-ant-0.2.9.jar=libs/j2ssh-ant-0.2.9.jar
file.reference.j2ssh-common-0.2.9.jar=libs/j2ssh-common-0.2.9.jar
file.reference.j2ssh-core-0.2.9.jar=libs/j2ssh-core-0.2.9.jar
file.reference.j2ssh-daemon-0.2.9.jar=libs/j2ssh-daemon-0.2.9.jar
file.reference.jaf.jar=libs/jaf.jar
file.reference.javamail.jar=libs/javamail.jar
file.reference.jcommon-1.0.16.jar=libs/jcommon-1.0.16.jar
file.reference.jrobin-1.5.12.jar=libs/jrobin-1.5.12.jar
file.reference.jsch-0.1.45.jar=libs/jsch-0.1.45.jar
file.reference.log4j-1.2.16.jar=libs/log4j-1.2.16.jar
file.reference.MRJToolkitStubs.zip=libs/MRJToolkitStubs.zip
file.reference.toplink-essentials.jar=libs/toplink-essentials.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=true
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.DateChooser.jar}:\
    ${file.reference.MRJToolkitStubs.zip}:\
    ${file.reference.balloontip-1.2.1.jar}:\
    ${file.reference.commons-logging-1.1.1.jar}:\
    ${file.reference.commons-logging-adapters-1.1.1.jar}:\
    ${file.reference.commons-logging-api-1.1.1.jar}:\
    ${file.reference.derby.jar}:\
    ${file.reference.derbyclient.jar}:\
    ${file.reference.derbynet.jar}:\
    ${file.reference.derbyrun.jar}:\
    ${file.reference.derbytools.jar}:\
    ${file.reference.expectj-2.0.7.jar}:\
    ${file.reference.j2ssh-ant-0.2.9.jar}:\
    ${file.reference.j2ssh-common-0.2.9.jar}:\
    ${file.reference.j2ssh-core-0.2.9.jar}:\
    ${file.reference.j2ssh-daemon-0.2.9.jar}:\
    ${file.reference.jaf.jar}:\
    ${file.reference.javamail.jar}:\
    ${file.reference.jcommon-1.0.16.jar}:\
    ${file.reference.jrobin-1.5.12.jar}:\
    ${file.reference.jsch-0.1.45.jar}:\
    ${file.reference.log4j-1.2.16.jar}:\
    ${file.reference.toplink-essentials.jar}:\
    ${libs.absolutelayout.classpath}:\
    ${libs.swing-layout.classpath}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=true
javac.external.vm=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.7
javac.target=1.7
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=true
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=true
javadoc.splitindex=true
javadoc.use=true
javadoc.version=true
javadoc.windowtitle=
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=DCMStarter
# Optional override of default Application-Library-Allowable-Codebase attribute identifying the locations where your signed RIA is expected to be found.
manifest.custom.application.library.allowable.codebase=
# Optional override of default Caller-Allowable-Codebase attribute identifying the domains from which JavaScript code can make calls to your RIA without security prompts.
manifest.custom.caller.allowable.codebase=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
project.license=gpl30
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
